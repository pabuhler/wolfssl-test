name: CMake CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        use_asm: [asm-yes, asm-no]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Ubuntu wolfSSL
      if: matrix.os == 'ubuntu-latest' && matrix.use_asm == 'asm-no'
      run: |
        git clone https://github.com/wolfSSL/wolfssl
        cd wolfssl
        git checkout v5.7.0-stable
        ./autogen.sh
        ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-aesgcm-stream'
        make
        sudo make install
        cd ..

    - name: Setup Ubuntu wolfSSL (asm)
      if: matrix.os == 'ubuntu-latest' && matrix.use_asm == 'asm-yes'
      run: |
        git clone https://github.com/wolfSSL/wolfssl
        cd wolfssl
        git checkout v5.7.0-stable
        ./autogen.sh
        ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-intelasm' '--enable-aesgcm-stream'
        make
        sudo make install
        cd ..

    - name: Setup macOS wolfSSL
      if: matrix.os == 'macos-latest' && matrix.use_asm == 'asm-no'
      run: |
        brew install autoconf automake libtool
        git clone https://github.com/wolfSSL/wolfssl
        cd wolfssl
        git checkout v5.7.0-stable
        ./autogen.sh
        ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-aesgcm-stream'
        make
        sudo make install
        cd ..

    - name: Setup macOS wolfSSL (asm)
      if: matrix.os == 'macos-latest' && matrix.use_asm == 'asm-yes'
      run: |
        brew install autoconf automake libtool
        git clone https://github.com/wolfSSL/wolfssl
        cd wolfssl
        git checkout v5.7.0-stable
        ./autogen.sh
        ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-armasm' '--enable-aesgcm-stream'
        make
        sudo make install
        cd ..

    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build .

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ./wolfssl-test

